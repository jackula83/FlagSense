// <auto-generated />
using System;
using FlagService.Domain.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlagService.Domain.Migrations
{
    [DbContext(typeof(FsSqlServerContext))]
    partial class FsSqlServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FlagService.Domain.Aggregates.Env", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColourCoding")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Uuid");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Uuid"), new[] { "Id" });

                    b.HasIndex("CreatedBy", "CreatedAt");

                    b.HasIndex("UpdatedBy", "UpdatedAt");

                    b.HasIndex(new[] { "DeleteFlag" }, "idx_deleteFlag");

                    b.HasIndex(new[] { "Uuid" }, "idx_uuid");

                    b.ToTable("Env");
                });

            modelBuilder.Entity("FlagService.Domain.Aggregates.Flag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("DefaultServeValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("SegmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("idx_Environment_FlagName");

                    b.HasIndex("SegmentId");

                    b.HasIndex("Uuid");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Uuid"), new[] { "Id" });

                    b.HasIndex("CreatedBy", "CreatedAt");

                    b.HasIndex("UpdatedBy", "UpdatedAt");

                    b.HasIndex(new[] { "DeleteFlag" }, "idx_deleteFlag")
                        .HasDatabaseName("idx_deleteFlag1");

                    b.HasIndex(new[] { "Uuid" }, "idx_uuid")
                        .HasDatabaseName("idx_uuid1");

                    b.ToTable("Flag");
                });

            modelBuilder.Entity("FlagService.Domain.Aggregates.Segment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColourCoding")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("DefaultServeValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnvironmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EnvironmentId");

                    b.HasIndex("Uuid");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Uuid"), new[] { "Id" });

                    b.HasIndex("CreatedBy", "CreatedAt");

                    b.HasIndex("UpdatedBy", "UpdatedAt");

                    b.HasIndex(new[] { "DeleteFlag" }, "idx_deleteFlag")
                        .HasDatabaseName("idx_deleteFlag2");

                    b.HasIndex(new[] { "Uuid" }, "idx_uuid")
                        .HasDatabaseName("idx_uuid2");

                    b.ToTable("Segment");
                });

            modelBuilder.Entity("FlagService.Domain.Aggregates.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Uuid");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Uuid"), new[] { "Id" });

                    b.HasIndex("CreatedBy", "CreatedAt");

                    b.HasIndex("UpdatedBy", "UpdatedAt");

                    b.HasIndex(new[] { "DeleteFlag" }, "idx_deleteFlag")
                        .HasDatabaseName("idx_deleteFlag3");

                    b.HasIndex(new[] { "Uuid" }, "idx_uuid")
                        .HasDatabaseName("idx_uuid3");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FlagService.Domain.Aggregates.Users.UserAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("Uuid");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Uuid"), new[] { "Id" });

                    b.HasIndex("CreatedBy", "CreatedAt");

                    b.HasIndex("UpdatedBy", "UpdatedAt");

                    b.HasIndex(new[] { "DeleteFlag" }, "idx_deleteFlag")
                        .HasDatabaseName("idx_deleteFlag4");

                    b.HasIndex(new[] { "Uuid" }, "idx_uuid")
                        .HasDatabaseName("idx_uuid4");

                    b.ToTable("UserProperty");
                });

            modelBuilder.Entity("FlagService.Domain.Entities.Rules.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<int>("Operator")
                        .HasColumnType("int");

                    b.Property<int>("RuleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(65536)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RuleId");

                    b.HasIndex(new[] { "DeleteFlag" }, "idx_deleteFlag")
                        .HasDatabaseName("idx_deleteFlag5");

                    b.HasIndex(new[] { "Uuid" }, "idx_uuid")
                        .HasDatabaseName("idx_uuid5");

                    b.ToTable("Condition");
                });

            modelBuilder.Entity("FlagService.Domain.Entities.Rules.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("DeleteFlag")
                        .HasColumnType("bit");

                    b.Property<int>("FlagId")
                        .HasColumnType("int");

                    b.Property<int?>("SegmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FlagId");

                    b.HasIndex("SegmentId");

                    b.HasIndex("Uuid");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Uuid"), new[] { "Id" });

                    b.HasIndex("CreatedBy", "CreatedAt");

                    b.HasIndex("UpdatedBy", "UpdatedAt");

                    b.HasIndex(new[] { "DeleteFlag" }, "idx_deleteFlag")
                        .HasDatabaseName("idx_deleteFlag6");

                    b.HasIndex(new[] { "Uuid" }, "idx_uuid")
                        .HasDatabaseName("idx_uuid6");

                    b.ToTable("Rule");
                });

            modelBuilder.Entity("FlagService.Domain.Aggregates.Flag", b =>
                {
                    b.HasOne("FlagService.Domain.Aggregates.Segment", "Segment")
                        .WithMany("Flags")
                        .HasForeignKey("SegmentId");

                    b.Navigation("Segment");
                });

            modelBuilder.Entity("FlagService.Domain.Aggregates.Segment", b =>
                {
                    b.HasOne("FlagService.Domain.Aggregates.Env", "Environment")
                        .WithMany("Segments")
                        .HasForeignKey("EnvironmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Environment");
                });

            modelBuilder.Entity("FlagService.Domain.Aggregates.Users.UserAttribute", b =>
                {
                    b.HasOne("FlagService.Domain.Aggregates.User", "User")
                        .WithMany("Attributes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FlagService.Domain.Entities.Rules.Condition", b =>
                {
                    b.HasOne("FlagService.Domain.Entities.Rules.Rule", "Rule")
                        .WithMany("Conditions")
                        .HasForeignKey("RuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rule");
                });

            modelBuilder.Entity("FlagService.Domain.Entities.Rules.Rule", b =>
                {
                    b.HasOne("FlagService.Domain.Aggregates.Flag", "Flag")
                        .WithMany("Rules")
                        .HasForeignKey("FlagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlagService.Domain.Aggregates.Segment", null)
                        .WithMany("Rules")
                        .HasForeignKey("SegmentId");

                    b.Navigation("Flag");
                });

            modelBuilder.Entity("FlagService.Domain.Aggregates.Env", b =>
                {
                    b.Navigation("Segments");
                });

            modelBuilder.Entity("FlagService.Domain.Aggregates.Flag", b =>
                {
                    b.Navigation("Rules");
                });

            modelBuilder.Entity("FlagService.Domain.Aggregates.Segment", b =>
                {
                    b.Navigation("Flags");

                    b.Navigation("Rules");
                });

            modelBuilder.Entity("FlagService.Domain.Aggregates.User", b =>
                {
                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("FlagService.Domain.Entities.Rules.Rule", b =>
                {
                    b.Navigation("Conditions");
                });
#pragma warning restore 612, 618
        }
    }
}
